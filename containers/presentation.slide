Containers: docker
Balbuceos sobre una tecnología de moda.

* Links


.link https://www.docker.com/ Docker | https://www.docker.com/
.link https://www.vagrantup.com/ Vagrant | https://www.vagrantup.com/
.link https://www.chef.io/chef/ chef | https://www.chef.io/chef/
.link https://puppetlabs.com/ puppets | https://puppetlabs.com/
.link http://www.javiergarzas.com/2015/08/docker-vs-puppet-vs-vagrant-vs-chef.html docker vs puppet vs vagrant vs chef

* Licencias

En su mayoria tenemos opciones de elegir soluciones libres en esta teconología. Aunque como todo corre en un servidor terminaremos pagando para que nuestros containers corran en un infrestructura que es complicado saber sus licencias.

.image images/inspeccionar.jpg 323 800

* Licencias

.image images/docker.png 48 199 
Apache License | Version 2.0, January 2004 | https://www.apache.org/licenses/ [FREE]

.image images/vagrant.png 64 248
The MIT License [FREE]

.image images/virtualbox.png 68 358
GNU General Public License V2 [FREE]

* Licencias

.image images/puppet.png 53 157
.link https://puppetlabs.com/sites/default/files/Puppet%20Labs%20-%20FORM%20-%20Software%20License%20Agreement%20%28Puppet%20Enterprise%20-%20Clickwrap%29%203.7.14.pdf  Licencia | Privativa

.image images/chef.png 196 233
Apache License | Version 2.0, January 2004 | esta medio escondido pero esta así que [FREE]

.link https://github.com/chef/chef chef | source code

* boot2docker

_es_un_linuxito_ que sirve para correr containers Docker dentro de plataformas no Linux y también corre en Linux.

.link http://boot2docker.io/ http://boot2docker.io/

Es un desarrollo libre que nos permite correr la infraestructura de containers dentro de plataformas Windows / MacOs / Linux.

  No entiendo bien para que correr esto en Linux ya que docker corre sin necesidad de una VM.
  Es muy probable que sea para mantener al máximo el aislamiento [ISOLATION] en los containers.

.image images/isolation.png 103 704

* Acerca de la charla

- Principalmente Docker

- ¿Porque vagrant?

- ¿Porque Chef?

- ¿Porque Puppet?

* Docker

Comandos importantes para docker:

  run       Run a command in a new container

Pone en marcha un nuevo container a partir de una imagen que puede o no ser local.
ej: 

  docker run -d -p 5432:5432 --name db postgres

Los argumentos como -p para exponer los puertos y --link para generar un nombre de enlace son de gran ayuda a la hora de comunicar partes aisladas de una aplicación.

* Docker Build

Docker puede construir imagenes siguiendo las instrucciones que le pasamos en un Dockerfile.

  FROM debian:stable
  MAINTAINER Giménez Silva Germán Alberto <ggerman@gmail.com>
  RUN echo 'deb http://ftp.us.debian.org/debian/ stable main non-free contrib' >> /etc/apt/sources.list
  RUN apt-get update
  RUN apt-get install -y dosbox --no-install-recommends
  RUN apt-get install -y openjdk-7-jre --no-install-recommends
  RUN apt-get clean
  RUN mkdir ~/Pacman
  # el contenido que queremos copiar a la carpeta debe estar en el path actual
  COPY ./Pacman/* ~/Pacman/ 
  ENTRYPOINT ["dosbox"]

Linea de comando:

  # docker build -t myname/tag .

* Docker images

Utilizando images obtenemos un listado de todas nuestros contenedores (no necesariamente corriendo en nuestro sistema). Si alguno de estos containers nos molesta o queremos desacernos de él lo podemos remover con rmi o rmi -f y a continuación su ID.

.image images/docker-images.png 166 937

Estas imagenes estan listas para correr.

* Docker Run

  docker run --name ruby-postgres -e POSTGRES_PASSWORD=asdasd123 -d postgres
