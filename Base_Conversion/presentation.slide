GO: Algoritmia
Una presentación acerca de algoritmos

Germán Alberto Giménez Silva
EOSWEB.info
ggerman@eosweb.info
http://www.eosweb.info/

* Introducción

Go es un lenguaje muy poderoso que permite realizar muchas cosas inovadoras. Esta presentación no trata acerca de esas ventajas de Go si no de como escribir antiguos algoritmos en este lenguaje.

Osea utilizar un lenguaje nuevo para hacer cosas viejas.

- Por que de esta presentación:

Por que hace muchos años que quiero tener un lugar donde buscar esos viejos algoritmos y encontrarlos organizados a mi manera, básicamente una motivavión nada mas que personal.

* Reverse string func


Declaration of libraries in the header

.code compiling/01/conversion_base.go /PART0/,/PART1/

Reverse `String` function

.code compiling/01/conversion_base.go /PART1/,/PART2/

Remainder integers results

.code compiling/01/conversion_base.go /PART2/,/PART3/

* Base conversion func

.code compiling/01/conversion_base.go /PART3/,/PART4/

* Execute program

.play compiling/01/conversion_base.go /PART4/,/PART5/

* Using Slices

.code compiling/02/conversion.go /PART3/,/PART4/

* Run with Slices

.code compiling/02/conversion.go /PART2/,/PART3/

.play compiling/02/conversion.go /PART4/,/PART5/

* Testing Conversor

.code compiling/02/conversion_test.go /PART1/,/PART2/

* Convert no recursive process

.code compiling/03/conversion.go /PART3/,/PART4/

.play compiling/03/conversion.go /PART4/,/PART5/

* Operators

000 -> 0 001 -> 1 010 -> 2
011 -> 3 100 -> 4 101 -> 5
110 -> 6 111 -> 7

.play compiling/04/operators.go

* math

.play compiling/03/math.go

* math

.play compiling/04/math.go

* Structs and Pointers

.code compiling/05/pointers.go /STRUCTS0/,/ADDNODE1/ 

.code compiling/05/pointers.go /ADDNODE1/,/DUMP/

* Run Structs and Pointers Application (List)

.code compiling/05/pointers.go /DUMP/,/APPLICATION/

.play compiling/05/pointers.go /APPLICATION/,/FINISH/
>>>>>>> 5e1c9a864d9131194a0a63f4194bce97f28347f2:Base_Conversion/presentation.slide
